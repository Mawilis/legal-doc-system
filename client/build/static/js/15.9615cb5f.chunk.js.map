{"version":3,"file":"static/js/15.9615cb5f.chunk.js","mappings":"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","sources":["features/admin/pages/UserManagement.jsx"],"sourcesContent":["import React, { useEffect, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchAllUsers,\n    deleteUser,\n    createUser,\n} from '../reducers/adminSlice';\nimport { FaEdit, FaTrash, FaPlus } from 'react-icons/fa';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Button,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    Paper,\n    TableBody,\n    Box,\n    Typography,\n    Modal,\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material';\nimport { Formik, ErrorMessage } from 'formik';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport LoadingSpinner from '../../../components/LoadingSpinner';\n\n// Styled Components\nconst AdminContainer = styled.div`\n  padding: 20px;\n  background-color: #f9f9f9;\n  min-height: 100vh;\n`;\n\nconst AdminHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst AdminTitle = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n`;\n\nconst AddUserButton = styled(Button)`\n  && {\n    background-color: #007bff;\n    color: #fff;\n    border-radius: 5px;\n    transition: background-color 0.2s ease;\n\n    &:hover {\n      background-color: #0062cc;\n    }\n  }\n`;\n\nconst ErrorText = styled.p`\n  color: #dc3545;\n  text-align: center;\n  font-size: 1.2rem;\n`;\n\nconst modalStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nconst UserManagement = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const { users, loading, error } = useSelector((state) => state.admin);\n    const [openAddModal, setOpenAddModal] = useState(false);\n\n    const fetchUsers = useCallback(() => {\n        dispatch(fetchAllUsers());\n    }, [dispatch]);\n\n    useEffect(() => {\n        fetchUsers();\n    }, [fetchUsers]);\n\n    const handleEdit = useCallback((user) => {\n        navigate(`/admin/users/edit/${user.id}`, { state: { user } });\n    }, [navigate]);\n\n    const handleDelete = useCallback(\n        async (userId) => {\n            if (window.confirm(\"Are you sure you want to delete this user?\")) {\n                try {\n                    await dispatch(deleteUser(userId)).unwrap();\n                    toast.success(\"User deleted successfully!\");\n                } catch (err) {\n                    toast.error(\"Failed to delete user.\");\n                }\n            }\n        },\n        [dispatch]\n    );\n\n    const handleAddUser = () => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseAddModal = () => {\n        setOpenAddModal(false);\n    };\n\n    if (loading) {\n        return <LoadingSpinner />;\n    }\n\n    if (error) {\n        return <ErrorText>{error}</ErrorText>;\n    }\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required(\"Name is required\"),\n        email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n        role: Yup.string().required(\"Role is required\"),\n    });\n\n    return (\n        <AdminContainer>\n            <AdminHeader>\n                <AdminTitle>User Management</AdminTitle>\n                <AddUserButton\n                    variant=\"contained\"\n                    onClick={handleAddUser}\n                    startIcon={<FaPlus />}\n                >\n                    Add User\n                </AddUserButton>\n            </AdminHeader>\n            <TableContainer component={Paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Email</TableCell>\n                            <TableCell>Role</TableCell>\n                            <TableCell>Actions</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {users.map((user) => (\n                            <TableRow key={user.id}>\n                                <TableCell>{user.id}</TableCell>\n                                <TableCell>{user.name}</TableCell>\n                                <TableCell>{user.email}</TableCell>\n                                <TableCell>{user.role}</TableCell>\n                                <TableCell>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"primary\"\n                                        onClick={() => handleEdit(user)}\n                                        startIcon={<FaEdit />}\n                                    >\n                                        Edit\n                                    </Button>\n                                    <Button\n                                        variant=\"outlined\"\n                                        color=\"error\"\n                                        onClick={() => handleDelete(user.id)}\n                                        startIcon={<FaTrash />}\n                                    >\n                                        Delete\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <Modal open={openAddModal} onClose={handleCloseAddModal}>\n                <Box sx={modalStyle}>\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Add New User\n                    </Typography>\n                    <Formik\n                        initialValues={{\n                            name: \"\",\n                            email: \"\",\n                            role: \"\",\n                        }}\n                        validationSchema={validationSchema}\n                        onSubmit={async (values, { resetForm }) => {\n                            try {\n                                await dispatch(createUser(values)).unwrap();\n                                toast.success(\"User added successfully!\");\n                                resetForm();\n                                handleCloseAddModal();\n                            } catch (err) {\n                                toast.error(\"Failed to add user.\");\n                            }\n                        }}\n                    >\n                        {({ values, handleChange, handleSubmit, errors, touched }) => (\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    error={touched.name && !!errors.name}\n                                    helperText={touched.name && errors.name}\n                                />\n                                <TextField\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    margin=\"normal\"\n                                    error={touched.email && !!errors.email}\n                                    helperText={touched.email && errors.email}\n                                />\n                                <FormControl fullWidth margin=\"normal\">\n                                    <InputLabel id=\"role-label\">Role</InputLabel>\n                                    <Select\n                                        labelId=\"role-label\"\n                                        id=\"role\"\n                                        name=\"role\"\n                                        value={values.role}\n                                        onChange={handleChange}\n                                        error={touched.role && !!errors.role}\n                                    >\n                                        <MenuItem value=\"sheriff\">Sheriff</MenuItem>\n                                        <MenuItem value=\"attorney\">Attorney</MenuItem>\n                                        <MenuItem value=\"admin\">Admin</MenuItem>\n                                    </Select>\n                                    <ErrorMessage name=\"role\" component={ErrorText} />\n                                </FormControl>\n                                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                                    Add User\n                                </Button>\n                                <Button\n                                    onClick={handleCloseAddModal}\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                >\n                                    Cancel\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </Box>\n            </Modal>\n        </AdminContainer>\n    );\n};\n\nexport default UserManagement;\n"],"names":["AdminContainer","styled","div","_templateObject","_taggedTemplateLiteral","AdminHeader","_templateObject2","AdminTitle","h1","_templateObject3","AddUserButton","Button","_templateObject4","ErrorText","p","_templateObject5","modalStyle","position","top","left","transform","width","bgcolor","boxShadow","UserManagement","dispatch","useDispatch","navigate","useNavigate","users","loading","error","useSelector","state","admin","openAddModal","setOpenAddModal","useState","fetchUsers","useCallback","fetchAllUsers","useEffect","handleEdit","user","concat","id","handleDelete","async","window","confirm","deleteUser","userId","unwrap","toast","success","err","handleCloseAddModal","_jsx","LoadingSpinner","children","validationSchema","Yup","shape","name","required","email","role","_jsxs","variant","onClick","handleAddUser","startIcon","FaPlus","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","color","FaEdit","FaTrash","Modal","open","onClose","Box","sx","Typography","Formik","initialValues","onSubmit","values","_ref","resetForm","createUser","_ref2","handleChange","handleSubmit","errors","touched","TextField","label","value","onChange","fullWidth","margin","helperText","FormControl","InputLabel","Select","labelId","MenuItem","ErrorMessage","type"],"sourceRoot":""}