{"version":3,"file":"static/js/767.9f94294f.chunk.js","mappings":"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","sources":["features/auth/pages/Login.jsx"],"sourcesContent":["// ~/legal-doc-system/client/src/features/auth/pages/Login.jsx\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, clearAuthError } from '../reducers/authSlice';\nimport styled from 'styled-components';\nimport backgroundImage from '../../../assets/legal-office.jpeg';\nimport logo from '../../../assets/logo.png';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n/**\n * IMPORTANT:\n * When using styled‑components alongside Material UI (which uses Emotion by default),\n * ensure that your bundler (e.g. Webpack) is configured to alias the MUI styled engine to\n * the styled‑components version. This prevents conflicts that can cause errors like:\n * \"Cannot read properties of null (reading 'useContext')\".\n *\n * In your webpack.config.js, add:\n * \n * resolve: {\n *   alias: {\n *     '@mui/styled-engine': '@mui/styled-engine-sc'\n *   }\n * }\n *\n * This configuration ensures that Material UI components (like CircularProgress)\n * work correctly within your styled‑components based project.\n */\n\n// Styled Components\n\nconst LoginWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0.5),\n      rgba(0, 0, 0, 0.8)\n    ),\n    url(${backgroundImage}) no-repeat center center fixed;\n  background-size: cover;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst LoginContainer = styled.div`\n  width: 95%;\n  max-width: 500px;\n  padding: 40px;\n  border-radius: 10px;\n  background-color: rgba(255, 255, 255, 0.95);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 20px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst WelcomeMessage = styled.h1`\n  font-size: 2.2rem;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.6rem;\n  color: #555;\n  margin-bottom: 30px;\n  font-weight: 500;\n`;\n\nconst InputField = styled.input`\n  width: 100%;\n  padding: 15px;\n  margin-bottom: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 1rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease;\n\n  &:focus {\n    border-color: #007bff;\n    outline: none;\n    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 15px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 1.2rem;\n  font-weight: 500;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0062cc;\n  }\n\n  &:disabled {\n    background-color: #a0a0a0;\n    cursor: not-allowed;\n  }\n`;\n\nconst ErrorText = styled.p`\n  color: #dc3545;\n  margin-bottom: 20px;\n  font-size: 0.9rem;\n`;\n\nconst Label = styled.label`\n  font-size: 1rem;\n  color: #333;\n  margin-bottom: 5px;\n  display: block;\n  text-align: left;\n  width: 100%;\n  font-weight: 500;\n`;\n\n/**\n * Login Component\n *\n * This component renders the login screen. It displays a login form for the user,\n * handles form submissions by dispatching the login action, and provides immediate\n * feedback (including a loading spinner inside the button) during authentication.\n *\n * On successful authentication, it navigates to the intended route.\n */\nconst Login = () => {\n  // Local state to hold email and password.\n  const [credentials, setCredentials] = useState({ email: '', password: '' });\n  // Local state for handling error messages.\n  const [error, setError] = useState(null);\n\n  // Redux state: token, loading status, and any authentication error.\n  const { token, loading, error: authError } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Determine the post-login redirect route; default to '/dashboard'.\n  const from = location.state?.from?.pathname || '/dashboard';\n\n  /**\n   * handleLogin\n   *\n   * This function is triggered when the user submits the login form.\n   * It clears any previous errors, dispatches the login action, and navigates\n   * to the intended page if authentication is successful.\n   */\n  const handleLogin = useCallback(\n    async (e) => {\n      e.preventDefault();\n      setError(null);\n      dispatch(clearAuthError()); // Clear previous auth errors\n\n      console.log('Login attempt with credentials:', credentials);\n\n      try {\n        // Dispatch the login action. Adjust based on your authSlice structure.\n        const loginResponse = await dispatch(loginUser(credentials));\n\n        // If login is successful, navigate to the target route.\n        if (loginResponse.payload.user || loginResponse.payload.success) {\n          console.log('Login successful, navigating to:', from);\n          navigate(from, { replace: true });\n        } else {\n          console.error('Login error:', loginResponse.error);\n          setError('Invalid credentials. Please try again.');\n        }\n      } catch (err) {\n        console.error('Login error:', err);\n        setError('Login failed. Please check your credentials and network connection.');\n      }\n    },\n    [credentials, dispatch, navigate, from]\n  );\n\n  /**\n   * handleInputChange\n   *\n   * Updates the credentials state as the user types in the input fields.\n   */\n  const handleInputChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setCredentials((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  }, []);\n\n  /**\n   * useEffect\n   *\n   * Watches for changes in the authentication state. If a valid token is present\n   * and there are no errors, it navigates the user to the designated route.\n   */\n  useEffect(() => {\n    let timeoutId;\n\n    console.log('Auth state changed:', { token, loading, authError, error });\n\n    if (token && !authError && !error) {\n      console.log('Token detected. Redirecting to:', from);\n      // Use a short delay to allow state updates before navigation.\n      timeoutId = setTimeout(() => {\n        navigate(from, { replace: true });\n      }, 100);\n    }\n\n    // Clear local error if Redux authError is cleared.\n    if (!authError) {\n      setError(null);\n    }\n\n    return () => clearTimeout(timeoutId);\n  }, [token, navigate, from, authError, loading, error]);\n\n  return (\n    <LoginWrapper>\n      <LoginContainer>\n        <Logo src={logo} alt=\"Legal Doc System Logo\" />\n        <WelcomeMessage>Welcome to the Legal Doc System</WelcomeMessage>\n        <Title>Please log in to continue</Title>\n        {/* Display any error message */}\n        {error && <ErrorText>{error}</ErrorText>}\n        <form onSubmit={handleLogin}>\n          <Label htmlFor=\"email\">Email</Label>\n          <InputField\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Enter your email\"\n            autoComplete=\"email\"\n            value={credentials.email}\n            onChange={handleInputChange}\n            required\n          />\n          <Label htmlFor=\"password\">Password</Label>\n          <InputField\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Enter your password\"\n            autoComplete=\"current-password\"\n            value={credentials.password}\n            onChange={handleInputChange}\n            required\n          />\n          <Button type=\"submit\" disabled={loading}>\n            {loading ? (\n              // Display a spinner inside the button during login\n              <CircularProgress size={24} color=\"inherit\" />\n            ) : (\n              'Login'\n            )}\n          </Button>\n        </form>\n      </LoginContainer>\n    </LoginWrapper>\n  );\n};\n\nexport default Login;\n"],"names":["LoginWrapper","styled","div","_templateObject","_taggedTemplateLiteral","backgroundImage","LoginContainer","_templateObject2","Logo","img","_templateObject3","WelcomeMessage","h1","_templateObject4","Title","h2","_templateObject5","InputField","input","_templateObject6","Button","button","_templateObject7","ErrorText","p","_templateObject8","Label","label","_templateObject9","Login","_location$state","_location$state$from","credentials","setCredentials","useState","email","password","error","setError","token","loading","authError","useSelector","state","auth","dispatch","useDispatch","navigate","useNavigate","from","useLocation","pathname","handleLogin","useCallback","async","e","preventDefault","clearAuthError","console","log","loginResponse","loginUser","payload","user","success","replace","err","handleInputChange","name","value","target","prev","_objectSpread","useEffect","timeoutId","setTimeout","clearTimeout","_jsx","children","_jsxs","src","logo","alt","onSubmit","htmlFor","type","id","placeholder","autoComplete","onChange","required","disabled","CircularProgress","size","color"],"sourceRoot":""}