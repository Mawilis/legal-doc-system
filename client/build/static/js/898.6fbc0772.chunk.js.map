{"version":3,"file":"static/js/898.6fbc0772.chunk.js","mappings":"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","sources":["features/admin/pages/AdminPanel.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    fetchAllUsers,\n    updateUser,\n    deleteUser,\n} from \"../reducers/adminSlice\";\nimport { FaEdit, FaTrash, FaPlus } from \"react-icons/fa\";\nimport {\n    Modal,\n    Box,\n    Button,\n    TextField,\n    Typography,\n} from \"@mui/material\";\n\nconst AdminContainer = styled.div`\n  padding: 20px;\n  background-color: #f9f9f9; // Light background color\n  min-height: 100vh;\n`;\n\nconst AdminHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst AdminTitle = styled.h1`\n  font-size: 2.5rem;\n  color: #333; // Dark text color\n`;\n\nconst AddUserButton = styled(Button)`\n  && {\n    background-color: #007bff; // Primary button color\n    color: #fff;\n\n    &:hover {\n      background-color: #0062cc; // Darker shade on hover\n    }\n  }\n`;\n\nconst UsersTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n`;\n\nconst TableHeader = styled.th`\n  padding: 10px;\n  border: 1px solid #ddd; // Subtle border\n  background-color: #f5f5f5; // Light background for header\n  color: #333;\n  text-align: left;\n  font-weight: 500; // Slightly bolder font\n`;\n\nconst TableData = styled.td`\n  padding: 10px;\n  border: 1px solid #ddd;\n  color: #555; // Slightly lighter text color\n`;\n\nconst ActionButton = styled.button`\n  background: none;\n  border: none;\n  color: #007bff; // Primary color for icons\n  cursor: pointer;\n  margin-right: 10px;\n  font-size: 1.2rem;\n  transition: color 0.2s ease; // Add transition for hover effect\n\n  &:hover {\n    color: #0062cc; // Darker shade on hover\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst Loading = styled.div`\n  text-align: center;\n  font-size: 1.5rem;\n  color: #007bff; // Primary color for loading message\n`;\n\nconst ErrorMessage = styled.p`\n  color: #dc3545; // Error color\n  text-align: center;\n  font-size: 1.2rem;\n`;\n\nconst AdminPanel = () => {\n    const dispatch = useDispatch();\n    const { users, loading, error } = useSelector((state) => state.admin);\n    const [openModal, setOpenModal] = useState(false);\n    const [selectedUser, setSelectedUser] = useState(null);\n\n    useEffect(() => {\n        dispatch(fetchAllUsers());\n    }, [dispatch]);\n\n    const handleEdit = useCallback((user) => {\n        setSelectedUser(user);\n        setOpenModal(true);\n    }, []);\n\n    const handleCloseModal = useCallback(() => {\n        setOpenModal(false);\n        setSelectedUser(null);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        dispatch(updateUser(selectedUser));\n        handleCloseModal();\n    }, [dispatch, selectedUser, handleCloseModal]);\n\n    const handleChange = useCallback(\n        (e) => {\n            const { name, value } = e.target;\n            setSelectedUser((prev) => ({ ...prev, [name]: value }));\n        },\n        []\n    );\n\n    const handleDelete = useCallback(\n        (userId) => {\n            if (window.confirm(\"Are you sure you want to delete this user?\")) {\n                dispatch(deleteUser(userId));\n            }\n        },\n        [dispatch]\n    );\n\n    if (loading) {\n        return <Loading>Loading Users...</Loading>;\n    }\n\n    if (error) {\n        return <ErrorMessage>{error}</ErrorMessage>;\n    }\n\n    return (\n        <AdminContainer>\n            <AdminHeader>\n                <AdminTitle>Admin Panel</AdminTitle>\n                <AddUserButton\n                    startIcon={<FaPlus />}\n                    onClick={() => {\n                        // Handle add user logic here\n                        // For example, you can open a modal to add a new user\n                        setOpenModal(true);\n                        setSelectedUser({ name: \"\", email: \"\", role: \"\" });\n                    }}\n                >\n                    Add User\n                </AddUserButton>\n            </AdminHeader>\n            <UsersTable>\n                <thead>\n                    <tr>\n                        <TableHeader>ID</TableHeader>\n                        <TableHeader>Name</TableHeader>\n                        <TableHeader>Email</TableHeader>\n                        <TableHeader>Role</TableHeader>\n                        <TableHeader>Actions</TableHeader>\n                    </tr>\n                </thead>\n                <tbody>\n                    {users.map((user) => (\n                        <tr key={user.id}>\n                            <TableData>{user.id}</TableData>\n                            <TableData>{user.name}</TableData>\n                            <TableData>{user.email}</TableData>\n                            <TableData>{user.role}</TableData>\n                            <TableData>\n                                <ActionButton\n                                    onClick={() => handleEdit(user)}\n                                    aria-label=\"Edit User\"\n                                >\n                                    <FaEdit />\n                                </ActionButton>\n                                <ActionButton\n                                    onClick={() => handleDelete(user.id)}\n                                    aria-label=\"Delete User\"\n                                >\n                                    <FaTrash />\n                                </ActionButton>\n                            </TableData>\n                        </tr>\n                    ))}\n                </tbody>\n            </UsersTable>\n\n            <Modal open={openModal} onClose={handleCloseModal}>\n                <Box\n                    sx={{\n                        p: 4,\n                        bgcolor: \"background.paper\",\n                        borderRadius: 1,\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%, -50%)\",\n                        width: 400,\n                    }}\n                >\n                    <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n                        {selectedUser && selectedUser.id ? \"Edit User\" : \"Add User\"}\n                    </Typography>\n                    {selectedUser && (\n                        <form>\n                            <TextField\n                                label=\"Name\"\n                                name=\"name\"\n                                value={selectedUser.name}\n                                onChange={handleChange}\n                                fullWidth\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                label=\"Email\"\n                                name=\"email\"\n                                value={selectedUser.email}\n                                onChange={handleChange}\n                                fullWidth\n                                margin=\"normal\"\n                            />\n                            <TextField\n                                label=\"Role\"\n                                name=\"role\"\n                                value={selectedUser.role}\n                                onChange={handleChange}\n                                fullWidth\n                                margin=\"normal\"\n                            />\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"flex-end\",\n                                    marginTop: \"20px\",\n                                }}\n                            >\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={handleCloseModal}\n                                    sx={{ mr: 2 }}\n                                >\n                                    Cancel\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleSave}\n                                >\n                                    Save\n                                </Button>\n                            </div>\n                        </form>\n                    )}\n                </Box>\n            </Modal>\n        </AdminContainer>\n    );\n};\n\nexport default AdminPanel;"],"names":["AdminContainer","styled","div","_templateObject","_taggedTemplateLiteral","AdminHeader","_templateObject2","AdminTitle","h1","_templateObject3","AddUserButton","Button","_templateObject4","UsersTable","table","_templateObject5","TableHeader","th","_templateObject6","TableData","td","_templateObject7","ActionButton","button","_templateObject8","Loading","_templateObject9","ErrorMessage","p","_templateObject10","AdminPanel","dispatch","useDispatch","users","loading","error","useSelector","state","admin","openModal","setOpenModal","useState","selectedUser","setSelectedUser","useEffect","fetchAllUsers","handleEdit","useCallback","user","handleCloseModal","handleSave","updateUser","handleChange","e","name","value","target","prev","_objectSpread","handleDelete","userId","window","confirm","deleteUser","_jsx","children","_jsxs","startIcon","FaPlus","onClick","email","role","map","id","FaEdit","FaTrash","Modal","open","onClose","Box","sx","bgcolor","borderRadius","position","top","left","transform","width","Typography","variant","component","gutterBottom","TextField","label","onChange","fullWidth","margin","style","display","justifyContent","marginTop","color","mr"],"sourceRoot":""}