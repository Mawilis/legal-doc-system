{"version":3,"file":"static/js/94.80bc732d.chunk.js","mappings":"0PAQA,MAAMA,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0JAQ1BC,EAAaJ,EAAAA,GAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4HAOvBG,EAAYN,EAAAA,GAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iOAarBM,EAAeT,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gFAMzBQ,EAAUX,EAAAA,GAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,uLAGJU,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAMC,EAAQ,sBAAwB,oBAAoB,IAG1EC,IAAA,IAAC,MAAED,GAAOC,EAAA,OAAMD,EAAQ,WAAa,YAAY,IAG3DE,EAAchB,EAAAA,GAAOiB,EAACC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,2DAKtBgB,EAAwBnB,EAAAA,GAAOoB,KAAIC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,oDAKnCmB,EAAetB,EAAAA,GAAOuB,MAAKC,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,8VAe3BsB,EAAazB,EAAAA,GAAO0B,OAAMC,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,6jBA0EhC,EA/CayB,KACX,MAAMC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,QAAEC,EAAO,MAAEC,IAAUC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAC3DC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAEvCC,EAAAA,EAAAA,YAAU,KACRX,GAASY,EAAAA,EAAAA,MAAoB,GAC5B,CAACZ,IAUJ,OACEa,EAAAA,EAAAA,MAAC3C,EAAa,CAAA4C,SAAA,EACZC,EAAAA,EAAAA,KAACxC,EAAU,CAAAuC,UACTC,EAAAA,EAAAA,KAACtC,EAAS,CAAAqC,SAAC,YAEbD,EAAAA,EAAAA,MAACjC,EAAY,CAAAkC,SAAA,CACVX,IAAWY,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBACdV,IAASW,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAAEC,MAAO,sBAAuBH,SAAEV,IACrDF,GAAYA,EAASgB,KAAKC,IACzBJ,EAAAA,EAAAA,KAACjC,EAAO,CAAcG,MAAOkC,EAAIlC,MAAM6B,UACrCC,EAAAA,EAAAA,KAAC5B,EAAW,CAAA2B,SAAEK,EAAIC,WADND,EAAIE,UAKtBR,EAAAA,EAAAA,MAACvB,EAAqB,CAACgC,SAtBLC,IACpBA,EAAEC,iBACEhB,EAAQiB,SACVzB,GAAS0B,EAAAA,EAAAA,IAAY,CAAEN,QAASZ,KAChCC,EAAW,IACb,EAiBgDK,SAAA,EAC5CC,EAAAA,EAAAA,KAACtB,EAAY,CACXkC,KAAK,OACLC,YAAY,uBACZC,MAAOrB,EACPsB,SAAWP,GAAMd,EAAWc,EAAEQ,OAAOF,OACrCG,UAAQ,KAEVjB,EAAAA,EAAAA,KAACnB,EAAU,CAAC+B,KAAK,SAASM,UAAWzB,EAAQiB,OAAOX,UAClDC,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,WAGH,C","sources":["features/chat/pages/Chat.jsx"],"sourcesContent":["// ~/legal-doc-system/client/src/features/chat/pages/Chat.jsx\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchChatMessages, sendMessage } from '../reducers/chatSlice';\nimport { FaPaperPlane } from 'react-icons/fa';\n\nconst ChatContainer = styled.div`\n  padding: var(--spacing-lg);\n  background-color: var(--background-color);\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--spacing-md);\n`;\n\nconst ChatTitle = styled.h1`\n  font-size: 2.5rem;\n  color: var(--primary-color);\n\n  @media (max-width: var(--breakpoint-tablet)) {\n    font-size: 2rem;\n  }\n\n  @media (max-width: var(--breakpoint-mobile)) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: var(--spacing-md);\n`;\n\nconst Message = styled.div`\n  padding: var(--spacing-sm);\n  margin-bottom: var(--spacing-xs);\n  background-color: ${({ isOwn }) => (isOwn ? 'var(--accent-color)' : 'var(--light-color)')};\n  border-radius: var(--border-radius);\n  max-width: 70%;\n  align-self: ${({ isOwn }) => (isOwn ? 'flex-end' : 'flex-start')};\n`;\n\nconst MessageText = styled.p`\n  font-size: 1rem;\n  color: var(--text-color);\n`;\n\nconst MessageInputContainer = styled.form`\n  display: flex;\n  align-items: center;\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: var(--spacing-sm);\n  border: 1px solid var(--accent-color);\n  border-radius: var(--border-radius);\n  margin-right: var(--spacing-sm);\n  transition: border-color var(--transition);\n\n  &:focus {\n    border-color: var(--primary-color);\n    outline: none;\n    box-shadow: 0 0 0 2px rgba(0, 112, 243, 0.2);\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: var(--primary-color);\n  color: #ffffff;\n  border: none;\n  padding: var(--spacing-sm) var(--spacing-md);\n  border-radius: var(--border-radius);\n  display: flex;\n  align-items: center;\n  transition: background-color var(--transition), transform 0.2s;\n\n  &:hover {\n    background-color: var(--secondary-color);\n    transform: translateY(-2px);\n    box-shadow: var(--shadow);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: none;\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst Chat = () => {\n  const dispatch = useDispatch();\n  const { messages, loading, error } = useSelector((state) => state.chat);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchChatMessages());\n  }, [dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (message.trim()) {\n      dispatch(sendMessage({ content: message }));\n      setMessage('');\n    }\n  };\n\n  return (\n    <ChatContainer>\n      <ChatHeader>\n        <ChatTitle>Chat</ChatTitle>\n      </ChatHeader>\n      <ChatMessages>\n        {loading && <p>Loading messages...</p>}\n        {error && <p style={{ color: 'var(--error-color)' }}>{error}</p>}\n        {messages && messages.map((msg) => (\n          <Message key={msg.id} isOwn={msg.isOwn}>\n            <MessageText>{msg.content}</MessageText>\n          </Message>\n        ))}\n      </ChatMessages>\n      <MessageInputContainer onSubmit={handleSubmit}>\n        <MessageInput\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          required\n        />\n        <SendButton type=\"submit\" disabled={!message.trim()}>\n          <FaPaperPlane />\n        </SendButton>\n      </MessageInputContainer>\n    </ChatContainer>\n  );\n};\n\nexport default Chat;\n"],"names":["ChatContainer","styled","div","_templateObject","_taggedTemplateLiteral","ChatHeader","_templateObject2","ChatTitle","h1","_templateObject3","ChatMessages","_templateObject4","Message","_templateObject5","_ref","isOwn","_ref2","MessageText","p","_templateObject6","MessageInputContainer","form","_templateObject7","MessageInput","input","_templateObject8","SendButton","button","_templateObject9","Chat","dispatch","useDispatch","messages","loading","error","useSelector","state","chat","message","setMessage","useState","useEffect","fetchChatMessages","_jsxs","children","_jsx","style","color","map","msg","content","id","onSubmit","e","preventDefault","trim","sendMessage","type","placeholder","value","onChange","target","required","disabled","FaPaperPlane"],"sourceRoot":""}