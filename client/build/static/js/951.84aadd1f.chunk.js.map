{"version":3,"file":"static/js/951.84aadd1f.chunk.js","mappings":"qPAOA,MAAMA,EAAgBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yKAS1BC,EAAYJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,yDAKrBI,EAAQP,EAAAA,GAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iHAQpBO,EAAWV,EAAAA,GAAOW,SAAQC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iHAQ1BU,EAASb,EAAAA,GAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,2MActBa,EAAYhB,EAAAA,GAAOiB,EAACC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gDAoF1B,EA/EqBgB,KACjB,MAAM,WAAEC,IAAeC,EAAAA,EAAAA,MAChBC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAC7BK,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAG,0BAGlBC,EAAAA,EAAAA,YAAU,KACN,GAAIb,EAAY,CACUc,WAClB,IACI,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,kBAADC,OAAmBlB,IACnDG,EAASY,EAASI,KAAKjB,OACvBI,EAAWS,EAASI,KAAKd,QAC7B,CAAE,MAAOe,GACLC,QAAQd,MAAM,2BAA4Ba,GAC1CZ,EAAS,8BACb,GAGJc,EACJ,IACD,CAACtB,IA8BJ,OACIuB,EAAAA,EAAAA,MAAC5C,EAAa,CAAA6C,SAAA,EACVC,EAAAA,EAAAA,KAACzC,EAAS,CAAAwC,SAAExB,EAAa,gBAAkB,wBAE1CO,IAASkB,EAAAA,EAAAA,KAAC7B,EAAS,CAAA4B,SAAEjB,KAEtBgB,EAAAA,EAAAA,MAAA,QAAMG,SAlCOZ,UAGjB,GAFAa,EAAEC,kBAEG1B,IAAUG,EAEX,YADAG,EAAS,uCAIb,MAAMqB,EAAe,CAAE3B,QAAOG,WAE9B,IACQL,SAEMgB,EAAAA,EAAMc,IAAI,kBAADZ,OAAmBlB,GAAc6B,GAChDlB,EAAOoB,KAAK,mBAAoBF,WAG1Bb,EAAAA,EAAMgB,KAAK,iBAAkBH,GACnClB,EAAOoB,KAAK,mBAAoBF,IAGpCpB,EAAS,aACb,CAAE,MAAOW,GACLC,QAAQd,MAAM,yBAA0Ba,GACxCZ,EAAS,8BACb,GASiCgB,SAAA,EACzBC,EAAAA,EAAAA,KAACtC,EAAK,CACF8C,KAAK,OACLC,YAAY,iBACZC,MAAOjC,EACPkC,SAAWT,GAAMxB,EAASwB,EAAEU,OAAOF,UAEvCV,EAAAA,EAAAA,KAACnC,EAAQ,CACLgD,KAAK,IACLJ,YAAY,mBACZC,MAAO9B,EACP+B,SAAWT,GAAMrB,EAAWqB,EAAEU,OAAOF,UAEzCV,EAAAA,EAAAA,KAAChC,EAAM,CAACwC,KAAK,SAAQT,SAAExB,EAAa,kBAAoB,yBAEhD,C","sources":["features/documents/pages/DocumentForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport styled from 'styled-components';\n\n// Styled Components for the form UI\nconst FormContainer = styled.div`\n  padding: 20px;\n  max-width: 600px;\n  margin: 20px auto;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst FormTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #218838;\n  }\n`;\n\nconst ErrorText = styled.p`\n  color: red;\n  text-align: center;\n`;\n\nconst DocumentForm = () => {\n    const { documentId } = useParams();  // Get document ID from URL\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n    const socket = io('http://localhost:3001');  // Adjust to match your backend\n\n    // Fetch document data if editing an existing document\n    useEffect(() => {\n        if (documentId) {\n            const fetchDocument = async () => {\n                try {\n                    const response = await axios.get(`/api/documents/${documentId}`);\n                    setTitle(response.data.title);\n                    setContent(response.data.content);\n                } catch (err) {\n                    console.error('Error fetching document:', err);\n                    setError('Failed to load the document');\n                }\n            };\n\n            fetchDocument();\n        }\n    }, [documentId]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (!title || !content) {\n            setError('Both title and content are required');\n            return;\n        }\n\n        const documentData = { title, content };\n\n        try {\n            if (documentId) {\n                // Update existing document\n                await axios.put(`/api/documents/${documentId}`, documentData);\n                socket.emit('document-updated', documentData);  // Notify others about the update\n            } else {\n                // Create new document\n                await axios.post('/api/documents', documentData);\n                socket.emit('document-created', documentData);  // Notify others about the new document\n            }\n\n            navigate('/documents');  // Redirect after successful submission\n        } catch (err) {\n            console.error('Error submitting form:', err);\n            setError('Failed to save the document');\n        }\n    };\n\n    return (\n        <FormContainer>\n            <FormTitle>{documentId ? 'Edit Document' : 'Create New Document'}</FormTitle>\n\n            {error && <ErrorText>{error}</ErrorText>}\n\n            <form onSubmit={handleSubmit}>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Document Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <Textarea\n                    rows=\"8\"\n                    placeholder=\"Document Content\"\n                    value={content}\n                    onChange={(e) => setContent(e.target.value)}\n                />\n                <Button type=\"submit\">{documentId ? 'Update Document' : 'Create Document'}</Button>\n            </form>\n        </FormContainer>\n    );\n};\n\nexport default DocumentForm;\n"],"names":["FormContainer","styled","div","_templateObject","_taggedTemplateLiteral","FormTitle","h2","_templateObject2","Input","input","_templateObject3","Textarea","textarea","_templateObject4","Button","button","_templateObject5","ErrorText","p","_templateObject6","DocumentForm","documentId","useParams","title","setTitle","useState","content","setContent","error","setError","navigate","useNavigate","socket","io","useEffect","async","response","axios","get","concat","data","err","console","fetchDocument","_jsxs","children","_jsx","onSubmit","e","preventDefault","documentData","put","emit","post","type","placeholder","value","onChange","target","rows"],"sourceRoot":""}